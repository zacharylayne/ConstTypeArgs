<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <SignAssembly>False</SignAssembly>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Const Type Arguments Core</Title>
    <Description>Provides a simple framework for defining types that can be used to pass constant &amp; static values as generic type arguments. These can be used in static contexts (such as static constructors &amp; static methods), reduce the need to pass arguments through instance constructors, bypass restrictions on types of arguments that can be passed to a generic attribute, and more.

Uses include scenarios such as array initialization, fixed-size buffers, compile-time configuration, type-safe enum-like values, compile-time validation, algorithm configuration, implementation of design patterns such as ECS, command, &amp; strategy, and more.

Creating new const type arguments is as simple as:

public readonly struct Pos_32: IConstTypeArg&lt;int&gt;
{ public static int Value =&gt; 32;  }

public readonly struct Pos_1024: IConstTypeArg&lt;int&gt;
{ public static int Value =&gt; 1024;  }

Here's a very simple example of how this could be used:

public class FixedSizeBuffer&lt;TSize&gt;
    where TSize : IConstTypeArg&lt;int&gt;
{
    private byte[] buffer = new byte[TSize.Value];

    // Buffer operations...
}

// Elsewhere in code:
var largeBuffer = new FixedSizeBuffer&lt;Pos_1024&gt;();
var smallBuffer = new FixedSizeBuffer&lt;Pos_32&gt;();</Description>
    <PackageTags>constants; const-type-args; generics; static-abstract-interface-members</PackageTags>
    <AssemblyVersion>1.0.0</AssemblyVersion>
    <PackageProjectUrl>https://github.com/zacharylayne/ConstTypeArgs</PackageProjectUrl>
    <Version>1.2-beta1</Version>
    <FileVersion>1.2.0.0</FileVersion>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <Authors>Zachary Layne</Authors>
    <Company>Entry Point Software</Company>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
    <PackageReleaseNotes>Added types of exceptions: ConstTypeException, ConstTypeArgException, UndefinedConstTypeArgException, and MisleadingConstTypeException.
    Fixed K_ReadOnlyMemoryT_Array&lt;T&gt; to implement K_ReadOnlyMemory&lt;T[]&gt; instead of K_Array&lt;T&gt;.
    Miscellaneous minor changes.</PackageReleaseNotes>
    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageReadmeFile>README.MD</PackageReadmeFile>
    <PackageIcon>Core.png</PackageIcon>
    <RepositoryUrl>https://github.com/zacharylayne/ConstTypeArgs/</RepositoryUrl>
    <IncludeSource>true</IncludeSource>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <Copyright>Copyright (c) 2024 Zachary Layne</Copyright>
    <DocumentationFile>ConstTypeArgs.Core.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <IsTrimmable>True</IsTrimmable>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <IsTrimmable>True</IsTrimmable>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\Icons\Core.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Using Include="System.ComponentModel" />
    <Using Include="System.ComponentModel.EditorBrowsableState">
      <Static>True</Static>
    </Using>
    <Using Include="System.Diagnostics.CodeAnalysis" />
    <Using Include="System.Globalization.CultureInfo">
      <Static>True</Static>
    </Using>
    <Using Include="System.Numerics" />
  </ItemGroup>

  <ItemGroup>
    <None Update="README.MD">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
