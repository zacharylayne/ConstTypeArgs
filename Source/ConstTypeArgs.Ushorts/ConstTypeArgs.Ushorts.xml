<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConstTypeArgs.Ushorts</name>
    </assembly>
    <members>
        <member name="T:ConstTypeArgs.Ushorts.K_Ushort">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.K_Ushort"/> interface provides a more explicit
            <c>IConstTypeArg&lt;ushort&gt;</c> derived type.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/api/system.uint16">
            System.UInt16</seealso>
            <seealso cref="T:ConstTypeArgs.Ushorts.Ushort`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_UshortArray"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.K_Ushort`1">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.K_Ushort`1"/> interface provides a more explicit
            <c>IConstTypeArg&lt;ushort, K_Ushort&lt;TSelf&gt;&gt;</c> derived type.
            </summary>
            <typeparam name="TSelf">
            The implementing type.
            </typeparam>
            <seealso href="https://learn.microsoft.com/dotnet/api/system.uint16">
            System.UInt16</seealso>
            <seealso cref="T:ConstTypeArgs.Ushorts.Ushort`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_UshortArray`1"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.K_UshortArray">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.K_UshortArray"/> interface provides a more explicit
            <c>IConstTypeArg&lt;ushort[]&gt;</c> type.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/api/system.uint16">
            System.UInt16</seealso>
            <seealso cref="T:ConstTypeArgs.Ushorts.UshortArray`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_Ushort"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.K_UshortArray`1">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.K_UshortArray`1"/> interface provides a more explicit
            <c>IConstTypeArg&lt;ushort[], K_UshortArray&lt;TSelf&gt;&gt;</c> derived type.
            </summary>
            <typeparam name="TSelf">
            The implementing type.
            </typeparam>
            <seealso href="https://learn.microsoft.com/dotnet/api/system.uint16">
            System.UInt16</seealso>
            <seealso cref="T:ConstTypeArgs.Ushorts.UshortArray`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_Ushort`1"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.Ushort`1">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.Ushort`1"/> class provides a const argument provider that
            wraps the <see langword="ushort"/> value from another const argument provider.
            </summary>
            <typeparam name="K">
            The const argument provider type containing the value to wrap.
            </typeparam>
            <remarks>
            This class can be useful when creating domain-specific const argument providers,
            such as default values, when a const argument provider's value needs to be
            wrapped for use in a different context.
            </remarks>
            <seealso cref="T:ConstTypeArgs.Ushorts.UshortArray`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_Ushort"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_Ushort`1"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.UshortArray`1">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.UshortArray`1"/> class provides a const argument provider that
            wraps the <see langword="ushort"/> array from another const argument provider.
            </summary>
            <typeparam name="K">
            The const argument provider type containing the array to wrap.
            </typeparam>
            <remarks>
            This class can be useful when creating domain-specific const argument providers,
            such as default values, when a const argument provider's value needs to be
            wrapped for use in a different context.
            </remarks>
            <seealso cref="T:ConstTypeArgs.Ushorts.Ushort`1"/>
            <seealso cref="T:ConstTypeArgs.Ushorts.K_Ushort"/>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.Default">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.Default"/> readonly struct provides a const type argument equal to the
            <see langword="default"/> of <see langword="ushort"/> (<c>0</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.MinValue">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.MinValue"/> readonly struct provides a const type argument
            equal to
            <see href="https://docs.microsoft.com/dotnet/api/system.uint16.minvalue">
            UInt16.MinValue</see> (<c>0</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.MaxValue">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.MaxValue"/> readonly struct provides a const type argument
            equal to
            <see href="https://docs.microsoft.com/dotnet/api/system.int16.maxvalue">
            UInt16.MaxValue</see> (<c>65535</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.MaxDigits">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.MaxDigits"/> readonly struct provides a const type argument equal to
            the maximum number of digits in a <see langword="ushort"/> (<c>5</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts.MaxHexDigits">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts.MaxHexDigits"/> readonly struct provides a const type argument equal to
            the maximum number of hex digits in a <see langword="ushort"/> (<c>4</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._0">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._0"/> readonly struct provides a const type argument equal to
            <c>0</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._1">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._1"/> readonly struct provides a const type argument equal to
            <c>1</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._2">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._2"/> readonly struct provides a const type argument equal to
            <c>2</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._3">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._3"/> readonly struct provides a const type argument equal to
            <c>3</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._4">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._4"/> readonly struct provides a const type argument equal to
            <c>4</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._5">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._5"/> readonly struct provides a const type argument equal to
            <c>5</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._6">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._6"/> readonly struct provides a const type argument equal to
            <c>6</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._7">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._7"/> readonly struct provides a const type argument equal to
            <c>7</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._8">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._8"/> readonly struct provides a const type argument equal to
            <c>8</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._9">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._9"/> readonly struct provides a const type argument equal to
            <c>9</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._10">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._10"/> readonly struct provides a const type argument equal to
            <c>10</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._11">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._11"/> readonly struct provides a const type argument equal to
            <c>11</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._12">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._12"/> readonly struct provides a const type argument equal to
            <c>12</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._13">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._13"/> readonly struct provides a const type argument equal to
            <c>13</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._14">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._14"/> readonly struct provides a const type argument equal to
            <c>14</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._15">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._15"/> readonly struct provides a const type argument equal to
            <c>15</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._16">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._16"/> readonly struct provides a const type argument equal to
            <c>16</c> (<c>2^4</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._25">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._25"/> readonly struct provides a const type argument equal to
            <c>25</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._31">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._31"/> readonly struct provides a const type argument equal to
            <c>31</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._32">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._32"/> readonly struct provides a const type argument equal to
            <c>32</c> (<c>2^5</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._50">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._50"/> readonly struct provides a const type argument equal to
            <c>50</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._63">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._63"/> readonly struct provides a const type argument equal to
            <c>63</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._64">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._64"/> readonly struct provides a const type argument equal to
            <c>64</c> (<c>2^6</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._100">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._100"/> readonly struct provides a const type argument equal to
            <c>100</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._127">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._127"/> readonly struct provides a const type argument equal to
            <c>127</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._128">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._128"/> readonly struct provides a const type argument equal to
            <c>128</c> (<c>2^7</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._200">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._200"/> readonly struct provides a const type argument equal to
            <c>200</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._255">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._255"/> readonly struct provides a const type argument equal to
            <c>255</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._256">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._256"/> readonly struct provides a const type argument equal to
            <c>256</c> (<c>2^8</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._511">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._511"/> readonly struct provides a const type argument equal to
            <c>_511</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._512">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._512"/> readonly struct provides a const type argument equal to
            <c>512</c> (<c>2^9</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._1023">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._1023"/> readonly struct provides a const type argument equal to
            <c>1023</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._1024">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._1024"/> readonly struct provides a const type argument equal to
            <c>1024</c> (<c>2^10</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._2047">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._2047"/> readonly struct provides a const type argument equal to
            <c>2047</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._2048">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._2048"/> readonly struct provides a const type argument equal to
            <c>2048</c> (<c>2^11</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._4095">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._4095"/> readonly struct provides a const type argument equal to
            <c>4095</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._4096">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._4096"/> readonly struct provides a const type argument equal to
            <c>4096</c> (<c>2^12</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._8191">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._8191"/> readonly struct provides a const type argument equal to
            <c>8191</c>.
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._8192">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._8192"/> readonly struct provides a const type argument equal to
            <c>8192</c> (<c>2^13</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._16384">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._16384"/> readonly struct provides a const type argument equal to
            <c>16384</c> (<c>2^14</c>).
            </summary>
        </member>
        <member name="T:ConstTypeArgs.Ushorts._32768">
            <summary>
            The <see cref="T:ConstTypeArgs.Ushorts._32768"/> readonly struct provides a const type argument equal to
            <c>32768</c> (<c>2^15</c>).
            </summary>
        </member>
    </members>
</doc>
